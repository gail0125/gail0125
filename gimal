DetailViewController.swift

import UIKit
class DetailViewController: UIViewController {
    var receiveItem = ""
    @IBOutlet var lblItem: UILabel!
    override func viewDidLoad() {
        super.viewDidLoad()
         lblItem.text = receiveItem
    }   
    func reciveItem(_ item: String)
    {
        receiveItem = item
    }
}



TableViewController.swift

import UIKit
var items = ["22년 6월 3일 12:30 과제"]
var itemsImageFile = ["clock.png"]
class TableViewController: UITableViewController {
   @IBOutlet var tvListView: UITableView!
        override func viewDidLoad() {
        super.viewDidLoad() 
            self.navigationItem.leftBarButtonItem = self.editButtonItem
    }    
    override func viewWillAppear(_ animated: Bool) {
            tvListView.reloadData()
    }
    override func numberOfSections(in tableView: UITableView) -> Int {       
        return 1
    }
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
         return items.count
    }    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "myCell", for: indexPath)
        cell.textLabel?.text = items[(indexPath as NSIndexPath).row]
        cell.imageView?.image = UIImage(named: itemsImageFile[(indexPath as NSIndexPath).row])
        return cell
    }

 override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            items.remove(at: (indexPath as NSIndexPath).row)
            itemsImageFile.remove(at: (indexPath as NSIndexPath).row)
            tableView.deleteRows(at: [indexPath], with: .fade)
        } else if editingStyle == .insert {            
        }
    }    
    override func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {
        return "삭제"
    }
    override func tableView(_ tableView: UITableView, moveRowAt fromIndexPath: IndexPath, to: IndexPath) {

        let itemToMove = items[(fromIndexPath as NSIndexPath).row]
        let itemImageToMove = itemsImageFile[(fromIndexPath as NSIndexPath).row]
        items.remove(at: (fromIndexPath as NSIndexPath).row)
        itemsImageFile.remove(at: (fromIndexPath as NSIndexPath).row)
        items.insert(itemToMove, at: (to as NSIndexPath).row)
        itemsImageFile.insert(itemImageToMove, at: (to as NSIndexPath).row)
    }
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "sgDetail" {
            let cell = sender as! UITableViewCell
            let indexPath = self.tvListView.indexPath(for: cell)
            let detailView = segue.destination as! DetailViewController
            detailView.reciveItem(items[((indexPath! as NSIndexPath).row)])
        }
    }
}

AddViewController.swift

import UIKit
class AddViewController: UIViewController {
    @IBOutlet var tfAddItem: UITextField!
    @IBOutlet var lblCurrentTime: UILabel!
    let timeSelector: Selector = #selector(AddViewController.updateTime)
    let interval = 1.0
    var count = 0
    override func viewDidLoad() {
        super.viewDidLoad()
        Timer.scheduledTimer(timeInterval: interval, target: self, selector: timeSelector, userInfo: nil, repeats: true)      
    }
    @IBAction func btnAddItem(_ sender: UIButton) {
        let Onalert = UIAlertController(title: "saved", message: "저장되었습니다.", preferredStyle: UIAlertController.Style.alert)
        let Checkalert = UIAlertAction(title: "확인했습니다", style: UIAlertAction.Style.default, handler: nil)
        Onalert.addAction(Checkalert)
        present(Onalert, animated: true, completion: nil)
        items.append(tfAddItem.text!)
        itemsImageFile.append("clock.png")
        tfAddItem.text=""
        _ = navigationController?.popViewController(animated: true)
    }
    @objc func updateTime(){   
    let date = NSDate()
    let formatter = DateFormatter()
    formatter.dateFormat = "yyyy-MM-dd HH:mm:ss EEE"
    lblCurrentTime.text = "현재시간: " + formatter.string(from: date as Date)
    }
}
